- title "Unapproved Deployments for #{@app_name}"

%ul.nav.nav-tabs
  - Rails.configuration.deploy_regions.each do |tab_region|
    %li{ class: ('active' if (tab_region == @region)), role: "presentation" }
      %a(href="?region=#{tab_region}")
        %span #{flag_icon(tab_region.to_sym)} #{tab_region.upcase}

%h2 Unapproved Deployments
%p
  A list of all unapproved releases
  %br A release is unapproved if none of the associated tickets have been approved in JIRA and no repository owner has pointed a reason why there is no approved JIRA ticket.

%table.table.table-condensed
  %thead
    %tr
      %th{width: '10%'} Version
      %th{width: '25%'} Tickets
      %th{width: '15%'} Deployed at
      %th{width: '10%'} Deployed by
      %th{width: '40%'} Deploy Alert
  %tbody
  - @unapproved_deploys.each do |deploy|
    %tr.pending-release.danger
      %td.monospace= commit_link(deploy.version, @github_repo_url)
      - tickets = Repositories::TicketRepository.new.tickets_for_versions([deploy.version])
      %td
        - tickets.each do |ticket|
          %div= jira_link(ticket.key)
      %td= time_with_timezone(deploy.deployed_at)
      %td= deploy.deployed_by
      %td= deploy.deploy_alert


%h2 Release Exceptions
%p
  A list of all releases, which were approved with a release exception published by a repository owner
  %br

%table.table.table-condensed
  %thead
    %tr
      %th{width: '10%'} Version
      %th{width: '10%'} Tickets
      %th{width: '15%'} Repo Owner
      %th{width: '30%'} Release Exception
      %th{width: '15%'} Release Exception posted at
      %th{width: '15%'} Deployed By
      %th{width: '15%'} Deployed At
  %tbody
  - @release_exceptions.each do |release_exception|
    %tr.deployed-release
      %td.monospace= commit_link(release_exception.versions.last, @github_repo_url)
      - tickets = Repositories::TicketRepository.new.tickets_for_versions(release_exception.versions)
      %td
        - tickets.each do |ticket|
          %div= jira_link(ticket.key)
      %td= release_exception.repo_owner.email
      %td= release_exception.comment
      %td= time_with_timezone(release_exception.submitted_at)
      - deploy = @deploy_repository.deploys_for_versions(release_exception.versions, environment: 'production', region: @region).first
      %td= deploy.deployed_by
      %td= time_with_timezone(deploy.deployed_at)

