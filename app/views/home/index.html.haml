- title 'Feature Reviewed Tickets'
%form.form-inline{"accept-charset" => "UTF-8", :action => "/", :method => "get"}
  .form-group
    %label.control-label.sr-only{:for => "q"} Search for deployed tickets:
    %input#q.form-control{:name => "q", :placeholder => "deployed SHA or keywords from ticket summary or description", :style => "width:700px;", :type => "text", :value => @query}/
    #datepicker.input-daterange.input-group
      %span.input-group-addon from
      %input#from_date.input-sm.form-control{:name => "from", :type => "text", :style => "width: 120px; height: 34px;", :value => @from_date}/
      %span.input-group-addon to
      %input#to_date.input-sm.form-control{:name => "to", :type => "text", :style => "width: 120px; height: 34px;", :value => @to_date}/
  %input.btn.btn-primary{:type => "submit", :value => "Search"}/

%h3#query_msg= result_message_for(query: @query, from_date: @from_date, to_date: @to_date, found: @tickets.any?).html_safe

- @tickets.in_groups_of(3) do | tickets_row |
  .row
    - tickets_row.compact.each do | ticket |
      .col-md-4
        .panel.panel-default.result
          .panel-heading
            %span.key= jira_link(ticket.key)
            %strong.summary= truncate(ticket.summary, length: 100, seperator: ' ')
          .panel-body
            - if ticket.description.nil?
              %em.description No description found.
            - else
              = simple_format(truncate(ticket.description, length: 250, seperator: ' '), class: 'description')
            %p
            - if ticket.deployed_commits.empty?
              %p No deploys
            - ticket.deployed_commits.group_by(&:app_name).each do |app_name, deployed_commits|
              %p
                %strong app_name
                %p
                  - deployed_commits.each do |deployed_commit|
                    Merged:
                    = time_with_timezone(deployed_commit.merged_at)
                    = commit_link(deployed_commit.id, deployed_commit.github_repo_url)
                    = deployed_commit.merged_by
                    %br
                    %br
                    %p
                      %strong Deploys
                      - if deployed_commit.deploys.empty?
                        %p none
                      - deployed_commit.deploys.each do |deploy|
                        %p.deploy
                          = flag_icon(deploy.region.to_sym)
                          = time_with_timezone(deploy.deployed_at)
                          = deploy.deployed_by
                      %br
