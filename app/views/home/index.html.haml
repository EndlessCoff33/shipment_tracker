- title 'Feature Reviewed Tickets'
%form.form-inline{"accept-charset" => "UTF-8", :action => "/", :method => "get"}
  .form-group
    %label.control-label.sr-only{:for => "q"} Search for deployed tickets:
    %input#q.form-control{:name => "q", :placeholder => "deployed SHA or keywords from ticket summary or description", :style => "width:700px;", :type => "text", :value => @query}/
    #datepicker.input-daterange.input-group
      %span.input-group-addon from
      %input#from_date.input-sm.form-control{:name => "from", :type => "text", :style => "width: 120px; height: 34px;", :value => @from_date}/
      %span.input-group-addon to
      %input#to_date.input-sm.form-control{:name => "to", :type => "text", :style => "width: 120px; height: 34px;", :value => @to_date}/
  %input.btn.btn-primary{:type => "submit", :value => "Search"}/

%h3#query_msg= result_message_for(query: @query, from_date: @from_date, to_date: @to_date, found: @tickets.any?).html_safe

- @tickets.in_groups_of(3) do | tickets_row |
  .row
    - tickets_row.compact.each do | ticket |
      .col-md-4
        .panel.panel-default.result
          .panel-heading
            %span.key= jira_link(ticket.key)
            %strong.summary= truncate(ticket.summary, length: 100, seperator: ' ')
          .panel-body
            - if ticket.description.nil?
              %em.description No description found.
            - else
              = simple_format(truncate(ticket.description, length: 250, seperator: ' '), class: 'description')
            %p
              %hr
              %b Merges
            - if ticket.merges.empty?
              %p none
            - ticket.merges.group_by { |merge| merge.app_name }.each do |app_name, merges|
              %p
                = app_name
                %p
                  %hr
                  - merges.each do |merge|
                    = merge.merged_at.utc.strftime('%F %H:%M %Z')
                    = commit_link(merge.sha, merge.github_repo_url[app_name])
                    = merge.merged_by
                    %br
                    %br
                    %p
                      %b Deploys
                      - if merge.deploys.empty?
                        %p none
                      - merge.deploys.each do |deploy|
                        %p.deploy
                          = flag_icon(deploy['region'].to_sym)
                          = "#{deploy['deployed_at']} #{deploy['app']}"
                          = commit_link(deploy['version'], deploy['github_url'])
                      %br
