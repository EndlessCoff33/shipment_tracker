
- if @feature_review_with_statuses.time
  .alert.alert-warning.time
    %span.glyphicon.glyphicon-time
    As viewed at #{@feature_review_with_statuses.time}

- title 'Feature Review', help_url: wiki_links(:feature_review)
%p Use the Feature Review page to ensure that the feature is in a ready state to be reviewed and signed off.

.row
  .col-lg-12
    - panel(heading: feature_status(@feature_review_with_statuses), status: @feature_review_with_statuses.authorisation_status, klass: 'feature-status', help_url: wiki_links(:approval), align_right: true) do
      - if @feature_review_with_statuses.tickets.any?
        - table(headers: %w(Ticket Summary Status Actions)) do
          - @feature_review_with_statuses.tickets.each do |ticket|
            %tr.ticket
              %td= jira_link(ticket.key)
              %td= ticket.summary
              %td
                - icon(item_status_icon_class(ticket.authorised?(@feature_review_with_statuses.versions, @feature_review_with_statuses.apps_with_approver_emails)))
                = ticket.authorisation_status(@feature_review_with_statuses.versions, @feature_review_with_statuses.apps_with_approver_emails)
              %td
                = link_to 'unlink', {controller: :feature_reviews, action: :unlink_ticket, apps: @feature_review_with_statuses.app_versions, jira_key: ticket.key, return_to: @return_to}, {class: 'btn btn-danger btn-xs', role: 'button'}

      .panel-body
        = form_tag(link_ticket_feature_reviews_path(return_to: @return_to), method: 'post', class: 'form-inline') do
          .form-group
            = label_tag('jira_key', 'Link Jira Ticket:', class: 'control-label')
            = text_field_tag('jira_key', '', placeholder: 'e.g: ENG-123', class: 'form-control input-sm', required: true)
          = submit_tag('Link', class: 'btn btn-primary btn-sm')
.row
  .col-lg-6.col-lg-push-6
    - panel(heading: 'Apps Under Review', klass: 'app-info', button_link: { text: 'Modify', url: edit_url(@feature_review_with_statuses.app_versions) }) do
      - table(headers: %w(App Commit Author Time)) do
        - @feature_review_with_statuses.apps_with_latest_commit.each do |app_name, latest_commit|
          %tr
            %td= app_name
            %td= commit_link(latest_commit.id, @feature_review_with_statuses.github_repo_urls[app_name])
            %td= latest_commit.author_name || 'unknown'
            %td= latest_commit.time || 'unknown'

    - panel(heading: 'Unit Test Results', klass: 'builds', status: @feature_review_with_statuses.unit_test_result_status) do
      - if @feature_review_with_statuses.unit_test_results.empty?
        .panel-body No Unit Test Builds found
      - else
        - table(headers: %w(Status App Source)) do
          - @feature_review_with_statuses.unit_test_results.each do |app_name, build|
            %tr.build
              %td
                - icon(item_status_icon_class(build.success))
              %td= app_name
              %td= build.source
    - panel(heading: 'Integration Test Results', klass: 'integration-test', status: @feature_review_with_statuses.integration_test_result_status) do
      - if @feature_review_with_statuses.integration_test_results.empty?
        .panel-body No Integration Test Builds found
      - else
        - table(headers: %w(Status App Source Build)) do
          - @feature_review_with_statuses.integration_test_results.each do |app_name, build|
            %tr.build
              %td
                - icon(item_status_icon_class(build.success))
              %td= app_name
              %td= build.source
              %td= build.version.present? ? link_to(short_sha(build.version), build.url) : ''
    - panel(heading: 'Repo Owner Commentary', klass: 'release-exception', status: @feature_review_with_statuses.release_exception_status) do
      .panel-body
        - if @feature_review_with_statuses.release_exception
          %p
            %span.repo-owner-email
              %strong= format_emails([@feature_review_with_statuses.release_exception.repo_owner])
            at
            %span.repo-owner-time= @feature_review_with_statuses.release_exception.submitted_at
          = simple_format(@feature_review_with_statuses.release_exception.comment, class: 'repo-owner-comment')
        - else
          No unapproved deployment exception explanation by a Repo Owner
      - if owner_of_any_repo?(current_user, @feature_review_with_statuses)
        .panel-footer
          = form_tag(events_path(type: 'release_exception', return_to: @return_to), method: 'post') do
            - @feature_review_with_statuses.app_versions.each do |app_name, version|
              = hidden_field_tag('apps[][name]', app_name)
              = hidden_field_tag('apps[][version]', version)
            %div.accept-reject-buttons
              %label.radio-inline.feature-review-accept
                = radio_button_tag 'status', 'approved', false, required: true
                Approve
              %label.radio-inline.feature-review-reject
                = radio_button_tag 'status', 'declined', false, required: true
                Decline
            .form-group
              = label_tag('comment', 'Comment', class: 'control-label sr-only')
              = text_area_tag('comment', '', placeholder: 'Comment', class: 'form-control', required: true, rows: 4)
            = submit_tag('Submit', class: 'btn btn-primary')

  .col-lg-6.col-lg-pull-6
    - panel(heading: 'Summary', status: @feature_review_with_statuses.summary_status, klass: 'summary') do
      %ul.list-group
        %li.list-group-item
          %strong
            - icon(item_status_icon_class(@feature_review_with_statuses.unit_test_result_status))
            %span.title Unit Test Results
        %li.list-group-item
          %strong
            - icon(item_status_icon_class(@feature_review_with_statuses.integration_test_result_status))
            %span.title Integration Test Results
        %li.list-group-item
          %strong
            - icon(item_status_icon_class(@feature_review_with_statuses.qa_status))
            %span.title QA Acceptance
        %li.list-group-item
          %strong
            - icon(item_status_icon_class(@feature_review_with_statuses.release_exception_status))
            %span.title Repo Owner Commentary

    - panel(heading: 'QA Acceptance', klass: 'qa-submission', status: @feature_review_with_statuses.qa_status) do
      .panel-body
        - if @feature_review_with_statuses.qa_submissions.present?
          %ul.list-group.qa-comments-list
            - @feature_review_with_statuses.qa_submissions.each do |qa_submission|
              %li
                %p
                  - icon(item_status_icon_class(qa_submission.accepted))
                  %span.qa-email
                    %strong= qa_submission.email
                  at
                  %span.qa-time= qa_submission.created_at
                - version_links = qa_submission.versions.map { |version| commit_link(version, @feature_review_with_statuses.app_url_for_version(version)) }
                = raw version_links.compact.join(' | ')
                = simple_format(qa_submission.comment, class: 'qa-comment')

                - unless qa_submission == @feature_review_with_statuses.qa_submissions.last
                  %hr
        - else
          Not reviewed by QA
      .panel-footer
        = form_tag(events_path(type: 'manual_test', return_to: @return_to), method: 'post') do
          - @feature_review_with_statuses.app_versions.each do |app_name, version|
            = hidden_field_tag('apps[][name]', app_name)
            = hidden_field_tag('apps[][version]', version)
          %div.accept-reject-buttons
            %label.radio-inline.feature-review-accept
              = radio_button_tag 'status', 'success', false, required: true
              Accept
            %label.radio-inline.feature-review-reject
              = radio_button_tag 'status', 'failed', false, required: true
              Reject
          .form-group
            = label_tag('comment', 'Comment', class: 'control-label sr-only', id: 'qa-comment')
            = text_area_tag('comment', '', placeholder: 'Comment', class: 'form-control', required: true, rows: 4)
          = submit_tag('Submit', class: 'btn btn-primary', id: '#qa-submit')

