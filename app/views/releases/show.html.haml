- title "Releases for #{@app_name}", help_url: wiki_links(:releases)

%p
  View which releases (merged commits) are pending deployment or have already been deployed.
  %br A release is approved if any associated tickets have been approved in JIRA.

%ul.nav.nav-tabs
  - Rails.configuration.deploy_regions.each do |tab_region|
    %li{ class: ('active' if (tab_region == @region)), role: "presentation" }
      %a(href="?region=#{tab_region}")
        %span #{flag_icon(tab_region.to_sym)} #{tab_region.upcase}

%h2 Pending

%table.table.table-condensed
  %thead
    %tr
      %th{width: '10%'} version
      %th{width: '55%'} message
      %th{width: '35%'} feature reviews
  %tbody
  - @pending_releases.each do |release|
    %tr.pending-release{class: ('danger' unless release.authorised?)}
      %td.monospace= commit_link(release.version, @github_repo_url)
      %td= pull_request_link(release.subject, @github_repo_url).html_safe
      %td
        - release.feature_reviews.each do |feature_review|
          %div= feature_review_link(feature_review)

%h2 Deployed

%table.table.table-condensed
  %thead
    %tr
      %th{width: '10%'} version
      %th{width: '45%'} message
      %th{width: '15%'} feature reviews
      %th{width: '20%'} last deployed at
      %th{width: '10%'} deployed by
  %tbody
  - @deployed_releases.each do |release|
    %tr.deployed-release{class: ('danger' unless release.authorised?)}
      %td.monospace= commit_link(release.version, @github_repo_url)
      %td= pull_request_link(release.subject, @github_repo_url).html_safe
      %td
        - release.feature_reviews.each do |feature_review|
          %div= feature_review_link(feature_review)
      %td= time_with_timezone(release.production_deploy_time)
      %td= release.deployed_by
